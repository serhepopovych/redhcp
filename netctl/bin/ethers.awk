#!/usr/bin/gawk -f

# Source USRXML database parsing library.
@include "@target@/netctl/lib/awk/libusrxml.awk"

function usrxml__user_cb(h, username, umap, fout, dec,    n, i, j, p, t, v)
{
	# h,username
	n = h SUBSEP username;

	# Type is user
	if (umap[n] != "user")
		return 0;

	# Skip inactive users
	if (umap[n,"inactive"])
		return 0;

	# h,userid
	i = h SUBSEP umap[n,"id"];

	if (!((i,"num") in USRXML_usernets))
		return 0;

	t = "";

	n = USRXML_usernets[i,"num"];
	for (p = 0; p < n; p++) {
		# h,userid,id
		j = i SUBSEP p;

		# Skip hole entries
		if (!((j,"mac") in USRXML_usernets))
			continue;

		v = USRXML_usernets[j];

		sub("/[[:digit:]]{1,2}$", "", v);
		t = t sprintf("%s\t%s\n", USRXML_usernets[j,"mac"], v);
	}

	if (t)
		printf "# %s\n%s\n", umap[i], t >>fout;

	return 0;
}

################################################################################

BEGIN{
	##
	## Initialize user database parser.
	##
	h = init_usrxml_parser("ethers.awk", 1);
	if (h < 0)
		exit 1;
}

{
	##
	## Parse user database.
	##
	line = $0;
	if (run_usrxml_parser(h, line) < 0)
		exit 1;
}

END{
	##
	## Configuration.
	##

	#
	# Setup pathes if variables are empty.
	#
	if (nctl_prefix == "")
		nctl_prefix = "@target@/netctl";

	prog = USRXML__instance[h,"prog"];

	if (!fout)
		fout = nctl_prefix "/etc/ethers";

	printf "\n# DO NOT EDIT AS CHANGES COULD BE LOST." \
	       "\n# Autogenerated by %s.\n\n", prog >fout;

	# users
	cb = "usrxml__user_cb";
	usrxml__map_for_each(h, USRXML_ifnames, cb, fout);

	##
	## Finish user database parsing.
	##
	if (fini_usrxml_parser(h) < 0)
		exit 1;
}
